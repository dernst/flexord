% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/flxbinomial.R
\name{FLXMCbinomial}
\alias{FLXMCbinomial}
\title{FlexMix Driver for Regularized Binomial Mixtures}
\usage{
FLXMCbinomial(formula = . ~ ., size = NULL, alpha2 = 0, eps = 0)
}
\arguments{
\item{formula}{A formula which is interpreted relative to the formula
specified in the call to \code{flexmix} using \code{update.formula}. Only the
left-hand side (response) of the formula is used. Default is to
use the original \code{flexmix} model formula.}

\item{size}{number of trials (zero or more)}

\item{alpha2}{Regularization parameter. Can be regarded the same as
adding \code{alpha2} observations conforming to the population mean to each
component.}

\item{eps}{When greater than zero, probabilities are truncated to fit
in [eps, 1-eps]}
}
\value{
an object of class FLXC
}
\description{
This model driver can be used to cluster binomial data.
Using a regularization parameter \code{alpha2} greater than zero
acts as adding \code{alpha2} observations conforming to the population
mean to each component. This can be used to avoid degenerate
solutions (i.e. probabilites of 0 or 1). It also has the effect
that clusters become more similar to each other the larger
\code{alpha2} is chosen. For small values it is mostly negligible however.
}
\details{
Parameter estimation is achieved using the MAP estimator for each cluster
and variable using a Beta prior.
}
\examples{
\donttest{
library("flexmix")
library("flexord")
library("flexclust")


# Sample data
k = 4     # nr of clusters
size = 4  # nr of trials
N = 100   # obs. per cluster

set.seed(0xdeaf)

# random probabilities per component
probs = lapply(seq_len(k), \(ki) runif(10, 0.01, 0.99))

# sample data
dat = lapply(probs, \(p) {
    lapply(p, \(p_i) {
        rbinom(N, size, p_i)
    }) |> do.call(cbind, args=_)
}) |> do.call(rbind, args=_)

true_clusters = rep(1:4, rep(N, k))

# Cluster without regularization
m1 = stepFlexmix(dat~1, model=FLXMCbinomial(size=size, alpha2=0), k=k)

# Cluster with regularization
m2 = stepFlexmix(dat~1, model=FLXMCbinomial(size=size, alpha2=1), k=k)

# Both models are mostly able to reconstruct the true clusters (ARI ~ 0.96)
# (it's a very easy clustering problem)
# Small values for the regularization don't seem to affect the ARI (much)
randIndex(clusters(m1), true_clusters)
randIndex(clusters(m2), true_clusters)
}
}
\references{
\itemize{
\item Ernst, D, Ortega Menjivar, L, Scharl T, Gr√ºn, B (2025).
\emph{Ordinal clustering with the flex-Scheme.}
Austrian Statistics Journal. \emph{Submitted manuscript}.
}
}
